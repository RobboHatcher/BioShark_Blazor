@page "/Config"

@using System;
@using BioShark_Blazor.Data;
@using BioShark_Blazor.Pages.Components;

@inject ADC _adc

<h1>Configuration Panel</h1>
<div class="container-fluid">
    <div class="row text-center">
        <ReadingsComponent />
        <div class="col-lg-8 text-center">
            <h3>Calibration Values</h3>
            <EditForm Model="@tempScale" class="col-lg">
                <InputNumber id="Mass Low Count" @bind-Value="massLowCount"/>
                <InputNumber id="Mass High Count" @bind-Value="massHighCount"/>
                <InputNumber id="Mass Low Value" @bind-Value="massLowValue"/>
                <InputNumber id="Mass High Value" @bind-Value="massHighValue"/>

                <InputNumber id="HPHR Low Count" @bind-Value="HPHRLowCount"/>
                <InputNumber id="HPHR High Count" @bind-Value="HPHRHighCount"/>
                <InputNumber id="HPHR Low Value" @bind-Value="HPHRLowValue"/>
                <InputNumber id="HPHR High Value" @bind-Value="HPHRHighValue"/>

                <InputNumber id="HPLR Low Count" @bind-Value="HPLRLowCount"/>
                <InputNumber id="HPLR High Count" @bind-Value="HPLRHighCount"/>
                <InputNumber id="HPLR Low Value" @bind-Value="HPLRLowValue"/>
                <InputNumber id="HPLR High Value" @bind-Value="HPLRHighValue"/>

                <InputNumber id="RH Low Count" @bind-Value="RHLowCount"/>
                <InputNumber id="RH High Count" @bind-Value="RHHighCount"/>
                <InputNumber id="RH Low Value" @bind-Value="RHLowValue"/>
                <InputNumber id="RH High Value" @bind-Value="RHHighValue"/>
                
            </EditForm>
            <button class="btn btn-primary btn-block" @onclick="@(()=>tempScale.StoreData())">Save Values</button>
            <button class="btn btn-warning btn-block" @onclick="@(()=>tempScale.InitializeTest())">Reset</button>
            <button class="btn btn-block" href="/">Cancel</button>
        </div>
    </div>
</div>



@code {
    private double massHighCount;
    private double massLowCount;
    private double massHighValue;
    private double massLowValue;

    private double HPHRHighCount;
    private double HPHRLowCount;
    private double HPHRHighValue;
    private double HPHRLowValue;

    private double HPLRHighCount;
    private double HPLRLowCount;
    private double HPLRHighValue;
    private double HPLRLowValue;

    private double RHHighCount;
    private double RHLowCount;
    private double RHHighValue;
    private double RHLowValue;

    private ScalingVals tempScale;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        tempScale = _adc._scale;

    }





}